import operator
from itertools import combinations
def solution(line):
    answer = []
    two_lines = list(combinations(line, 2))
    cross = []
    for two_line in two_lines:
        a, b, e = two_line[0][0], two_line[0][1], two_line[0][2]
        c, d, f = two_line[1][0], two_line[1][1], two_line[1][2],

        if a*d - b*c == 0:
            continue
        x, y = (b*f - e*d) / (a*d - b*c), (e*c - a*f) / (a*d - b*c)
        if float.is_integer(x) and float.is_integer(y):
            cross.append((x, y))

    cross = set(cross)

    n = int(max([i[1] for i in cross]) - min([i[1] for i in cross]) + 1)
    m = int(max([i[0] for i in cross]) - min([i[0] for i in cross]) + 1)

    graph = [['.'] * m for _ in range(n)]

    cross = sorted(cross, key=operator.itemgetter(1), reverse=True)
    print(cross)

    i = 0
    height = cross[0][1]
    for c in cross:
        if c[1] != height:
            i += int(height - c[1])
            height = c[1]

        graph[i][int(c[0] - min([i[0] for i in cross]))] = '*'
    for i in range(n):
        answer.append(''.join(graph[i]))
    return answer